name: CI

on:
  push:
    branches-ignore:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.21
        id: go

      - name: Set Go tool version
        run: |
          echo "GOLANG_VERSION=${steps.go.outputs.go-version}" >> $GITHUB_ENV

      - name: Install dependencies
        run: go mod download

      - name: Install linter
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linter
        run: golangci-lint run ./...

  check-coverage:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Install gocov
        run: go install github.com/axw/gocov/gocov@latest

      - name: Add GOPATH to PATH
        run: |
          echo "$GOPATH/bin" >> $GITHUB_PATH

      - name: Debug info
        run: |
          pwd
          ls -la
          echo $GOPATH
          which gocov

      - name: Run tests
        run: gocov test ./... > coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.out

      - name: Check coverage
        run: |
          # Check coverage meets minimum threshold using gocov-xml utility
          go get github.com/AlekSi/gocov-xml
          gocov-xml < coverage.out > coverage.xml
          go get github.com/t-yuki/gocover-cobertura
          gocover-cobertura < coverage.xml > cobertura-coverage.xml
          go get github.com/ChicagoFlutter/lcov-cop
          lcov-cop cobertura-coverage.xml --min-coverage=0.7

      - name: Fail if coverage below threshold
        if: ${{ failure() }}
        run: exit 1

  merge-to-dev:
    needs: check-coverage

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_ACCESS_TOKEN }}
          ref: dev

      - name: Merge to dev
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git merge origin/${{ github.ref }} --no-ff -m "Merge ${{ github.ref }} into dev [skip ci]"
