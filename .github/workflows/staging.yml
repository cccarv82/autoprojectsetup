# .github/workflows/staging.yml

name: Staging CI

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1

    - name: Run golangci-lint
      run: golangci-lint run

    - name: Test
      run: go test -v -coverprofile=coverage.txt ./...

    - name: Check test coverage
      run: |
        COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}' | sed 's/%//')
        echo "Test coverage: $COVERAGE%"
        echo $COVERAGE | awk '{if($1 < 70.0) exit 1}'

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
    
    - name: Build
      run: go build -v .

    - name: Auto merge to main
      if: github.ref == 'refs/heads/staging'
      uses: pascalgn/automerge-action@v0.14.3
      env:
        GITHUB_TOKEN: "${{ secrets.ACTIONS_ACCESS_TOKEN }}"
        MERGE_LABELS: ""
        MERGE_METHOD: "merge"
        MERGE_COMMIT_MESSAGE: "Automatic merge from staging"
        MERGE_FORKS: "false"
        UPDATE_LABELS: ""

  sync:
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Merge staging branch to main branch
      uses: devmasx/merge-branch@v1.3.1
      with:
        from_branch: "staging"
        target_branch: "main"
        github_token: ${{ secrets.ACTIONS_ACCESS_TOKEN }}